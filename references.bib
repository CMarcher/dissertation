@book{weyns_engineering_2018,
	title = {Engineering {Self}-{Adaptive} {Software} {Systems} – {An} {Organized} {Tour}},
	author = {Weyns, Danny},
	month = sep,
	year = {2018},
	doi = {10.1109/FAS-W.2018.00012},
	note = {Pages: 2},
	file = {Full Text PDF:C\:\\Users\\ca107\\Zotero\\storage\\97LGU423\\Weyns - 2018 - Engineering Self-Adaptive Software Systems – An Or.pdf:application/pdf},
}

@book{bynum2021pyomo,
  title     = {Pyomo - Optimization Modeling in Python, 3rd Edition},
  author    = {Bynum, Michael L. and Hackebeil, Gabriel A. and Hart, William E. and Laird, Carl D. and Nicholson, Bethany L. and Siirola, John D. and Watson, Jean-Paul and Woodruff, David L.},
  year      = {2021},
  publisher = {Springer}
}

@article{lee2021idaes,
  title={The IDAES process modeling framework and model library—Flexibility for process simulation and optimization},
  author={Lee, Andrew and Ghouse, Jaffer H and Eslick, John C and Laird, Carl D and Siirola, John D and Zamarripa, Miguel A and Gunter, Dan and Shinn, John H and Dowling, Alexander W and Bhattacharyya, Debangsu and others},
  journal={Journal of advanced manufacturing and processing},
  volume={3},
  number={3},
  pages={e10095},
  year={2021},
  publisher={Wiley Online Library}
}

@article{aydemir_building_2022,
	title = {Building a Performance Efficient Core Banking System Based on the Microservices Architecture},
	volume = {20},
	issn = {1572-9184},
	url = {https://doi.org/10.1007/s10723-022-09624-z},
	doi = {10.1007/s10723-022-09624-z},
	abstract = {Core banking systems lie in the heart of any bank today as they embrace all services that are provided by banks to carry out their day-to-day business. Examples of these services can be customer management, transaction processing, payment processing, auditing, and statistical reporting. Software infrastructure in such core banking systems was built based on the monolith system architecture, which was a common practice in building distributed software systems earlier before the advent of cloud computing. Monolith architecture incorporates all core banking services into a single, fully integrated piece of software where the codebase can become overwhelmingly complex and incomprehensible over time. As a consequence, it becomes rather challenging to make bug fixes and feature additions in monolith core banking systems and serious maintenance costs can arise to adapt to new technologies. Microservices Architecture ({MSA}) has emerged in line with the developments in virtualization technologies and cloud computing (e.g., Kubernetes, Containerization) as a software engineering practice to overcome the problems that can be encountered in monolith software. In this paper, a system architecture for an {MSA}-based core banking system was proposed by particularly taking performance efficiency into account. The justification of this architecture was made through a real-world case study in a commercial bank having a large-scale legacy core banking monolith. Load tests were applied to both this legacy core banking monolith and the new {MSA}-based banking system that reflects our architectural proposal and average request throughputs and response times were analyzed in both systems to demonstrate how better the proposed architecture performs in comparison to its monolith counterpart concerning performance-efficiency.},
	pages = {37},
	number = {4},
	journaltitle = {Journal of Grid Computing},
	shortjournal = {J Grid Computing},
	author = {Aydemir, Fikri and Başçiftçi, Fatih},
	urldate = {2024-03-21},
	date = {2022-11-02},
	langid = {english},
	keywords = {Core Banking System, Microservices Architecture, Monolith Architecture, Performance-Efficiency},
	file = {Full Text PDF:/Users/calebarcher/Zotero/storage/S8AP3YIG/Aydemir and Başçiftçi - 2022 - Building a Performance Efficient Core Banking Syst.pdf:application/pdf},
}

@inproceedings{goncalves_monolith_2021,
	location = {Stuttgart, Germany},
	title = {Monolith Modularization Towards Microservices: Refactoring and Performance Trade-offs},
	rights = {https://ieeexplore.ieee.org/Xplorehelp/downloads/license-information/{IEEE}.html},
	isbn = {978-1-66543-910-7},
	url = {https://ieeexplore.ieee.org/document/9425828/},
	doi = {10.1109/ICSA-C52384.2021.00015},
	shorttitle = {Monolith Modularization Towards Microservices},
	abstract = {The agility inherent to today’s business promotes the deﬁnition of software architectures where the business entities are decoupled into modules and/or services. However, there are advantages in having a rich domain model, where domain entities are tightly connected, because it fosters reuse. On the other hand, the split of the business logic into modules and its encapsulation through well-deﬁned interfaces introduces a cost in terms of performance. In this paper we analyze the impact of migrating a rich domain object into a modular architecture, both in terms of the development cost associated with the refactoring, and the performance cost associated with the execution. Current state of the art analyses the migration of monolith systems to a microservices architecture, but we observed that migration effort and performance issues are already relevant in the migration to a modular monolith.},
	eventtitle = {2021 {IEEE} 18th International Conference on Software Architecture Companion ({ICSA}-C)},
	pages = {1--8},
	booktitle = {2021 {IEEE} 18th International Conference on Software Architecture Companion ({ICSA}-C)},
	publisher = {{IEEE}},
	author = {Goncalves, Nuno and Faustino, Diogo and Silva, Antonio Rito and Portela, Manuel},
	urldate = {2024-04-09},
	date = {2021-03},
	langid = {english},
	file = {Goncalves et al. - 2021 - Monolith Modularization Towards Microservices Ref.pdf:/Users/calebarcher/Zotero/storage/XPIFXUAZ/Goncalves et al. - 2021 - Monolith Modularization Towards Microservices Ref.pdf:application/pdf},
}

@inproceedings{cheng_performance_2008,
	location = {Berlin, Heidelberg},
	title = {Performance, Benchmarking and Sizing in Developing Highly Scalable Enterprise Software},
	isbn = {978-3-540-69814-2},
	doi = {10.1007/978-3-540-69814-2_12},
	abstract = {Performance and scalability are essential characteristics of large-scale enterprise software. This paper presents the technologies behind the processes implemented at {SAP}. During the specification, design and implementation phases, {PerformanceDesign} Patterns are used as guidelines, which also define the Key Performance Indicators ({KPI}) for performance and scalability tests. With proven scalability of software applications, {SAP}’s Sizing Process enables the transformation of business requirements into hardware requirements. It also allows {SAP}’s customers to flexibly configure their specific applications, on operating system ({OS}), database ({DB}), and hardware platforms of their choice. The {SAP} Standard Application Benchmarks are developed and executed to test the scalability in extremely high load situations and to verify the sizing statements from the sizing process. They are also used for {SAP} internal regression tests across releases, and by {SAP}’s hardware partners for platform tests. Besides the response time centric performance testing, analysis and optimization, {SAP} follows a {KPI}-focused approach which permits potential performance problems to be reliably predicted already in simple and easy-to-execute tests. The {SAP} {NetWeaver} Portal Benchmark is used to demonstrate how to conduct performance and scalability tests using single user tests and load tests. We will introduce the {KPIs} used for Java memory analysis and optimization. Finally, this paper shows how the results of these tests can be used in hardware sizing in customer implementation projects.},
	pages = {174--190},
	booktitle = {Performance Evaluation: Metrics, Models and Benchmarks},
	publisher = {Springer},
	author = {Cheng, Xiaoqing},
	editor = {Kounev, Samuel and Gorton, Ian and Sachs, Kai},
	date = {2008},
	langid = {english},
	file = {Full Text PDF:/Users/calebarcher/Zotero/storage/6BJ3JHVG/Cheng - 2008 - Performance, Benchmarking and Sizing in Developing.pdf:application/pdf},
}

@article{merchan_computer-aided_2016,
	title = {Computer-Aided Process and Plant Development. A Review of Common Software Tools and Methods and Comparison against an Integrated Collaborative Approach},
	volume = {88},
	rights = {Copyright © 2016 {WILEY}-{VCH} Verlag {GmbH} \& Co. {KGaA}, Weinheim},
	issn = {1522-2640},
	url = {https://onlinelibrary.wiley.com/doi/abs/10.1002/cite.201500099},
	doi = {10.1002/cite.201500099},
	abstract = {In process systems engineering models are used for many applications, e.g., process simulation, optimization or control. Various types of models such as shortcut or rigorous models exist. An exchange and reuse thereof is highly desirable, but seldom performed. This article focuses on current approaches for developing and solving process models in specific instances for different applications. A close look will be made at the state of the art in modeling, simulation, and optimization software. Requirements for future software developments are derived to reduce the development and synthesis costs for new chemical engineering processes. The web-based modeling, simulation, and optimization environment {MOSAIC} is taken as an example to highlight current developments towards collaborative computer-aided engineering work.},
	pages = {50--69},
	number = {1},
	journaltitle = {Chemie Ingenieur Technik},
	author = {Merchan, Victor Alejandro and Esche, Erik and Fillinger, Sandra and Tolksdorf, Gregor and Wozny, Günter},
	urldate = {2024-04-16},
	date = {2016},
	langid = {english},
	note = {\_eprint: https://onlinelibrary.wiley.com/doi/pdf/10.1002/cite.201500099},
	keywords = {Equation-oriented simulation, Flowsheeting, Process synthesis, Process systems engineering},
	file = {Full Text PDF:/Users/calebarcher/Zotero/storage/EV985568/Merchan et al. - 2016 - Computer-Aided Process and Plant Development. A Re.pdf:application/pdf;Snapshot:/Users/calebarcher/Zotero/storage/ZB6YB4SL/cite.html:text/html},
}

@inproceedings{bridges_revisiting_2007,
	title = {Revisiting the Sequential Programming Model for Multi-Core},
	url = {https://ieeexplore.ieee.org/abstract/document/4408246},
	doi = {10.1109/MICRO.2007.20},
	abstract = {Single-threaded programming is already considered a complicated task. The move to multi-threaded programming only increases the complexity and cost involved in software development due to rewriting legacy code, training of the programmer, increased debugging of the program, and efforts to avoid race conditions, deadlocks, and other problems associated with parallel programming. To address these costs, other approaches, such as automatic thread extraction, have been explored. Unfortunately, the amount of parallelism that has been automatically extracted is generally insufficient to keep many cores busy. This paper argues that this lack of parallelism is not an intrinsic limitation of the sequential programming model, but rather occurs for two reasons. First, there exists no framework for automatic thread extraction that brings together key existing state-of-the-art compiler and hardware techniques. This paper shows that such a framework can yield scalable parallelization on several {SPEC} {CINT}2000 benchmarks. Second, existing sequential programming languages force programmers to define a single legal program outcome, rather than allowing for a range of legal outcomes. This paper shows that natural extensions to the sequential programming model enable parallelization for the remainder of the {SPEC} {CINT}2000 suite. Our experience demonstrates that, by changing only 60 source code lines, all of the C benchmarks in the {SPEC} {CINT}2000 suite were parallelizable by automatic thread extraction. This process, constrained by the limits of modern optimizing compilers, yielded a speedup of 454\% on these applications.},
	eventtitle = {40th Annual {IEEE}/{ACM} International Symposium on Microarchitecture ({MICRO} 2007)},
	pages = {69--84},
	booktitle = {40th Annual {IEEE}/{ACM} International Symposium on Microarchitecture ({MICRO} 2007)},
	author = {Bridges, Matthew and Vachharajani, Neil and Zhang, Yun and Jablin, Thomas and August, David},
	urldate = {2024-04-17},
	date = {2007-12},
	note = {{ISSN}: 2379-3155},
	keywords = {Costs, Parallel programming, Computer languages, Debugging, Hardware, Law, Legal factors, Programming profession, System recovery, Yarn},
	file = {IEEE Xplore Abstract Record:/Users/calebarcher/Zotero/storage/ZDGSG6N5/4408246.html:text/html;IEEE Xplore Full Text PDF:/Users/calebarcher/Zotero/storage/J2EEMZXC/Bridges et al. - 2007 - Revisiting the Sequential Programming Model for Mu.pdf:application/pdf},
}

@article{biegler_recent_2014,
	title = {Recent Advances in Chemical Process Optimization},
	volume = {86},
	issn = {1522-2640},
	url = {https://onlinelibrary.wiley.com/doi/abs/10.1002/cite.201400033},
	doi = {10.1002/cite.201400033},
	abstract = {Systematic optimization strategies are essential in process design, operations and control. This study provides a concise overview of recent advances in process optimization, with a particular focus on nonlinear programming. Here, derivative-free, {SQP}, reduced gradient, and interior point methods are described. Moreover, state of the art problem formulations and modeling environments are described, and contrasted with popular process simulation tools. Finally research directions are identified for future trends in multi-scale optimization within large-scale equation-oriented optimization environments.},
	pages = {943--952},
	number = {7},
	journaltitle = {Chemie Ingenieur Technik},
	author = {Biegler, Lorenz T.},
	urldate = {2024-04-17},
	date = {2014},
	langid = {english},
	note = {\_eprint: https://onlinelibrary.wiley.com/doi/pdf/10.1002/cite.201400033},
	keywords = {Complementarity problems, Multi-scale modeling, Nonlinear programming, Optimization, Process simulation},
	file = {Biegler - 2014 - Recent Advances in Chemical Process Optimization.pdf:/Users/calebarcher/Zotero/storage/PUS3XHCF/Biegler - 2014 - Recent Advances in Chemical Process Optimization.pdf:application/pdf;Snapshot:/Users/calebarcher/Zotero/storage/KFQ44BUA/cite.html:text/html},
}

@inproceedings{sifakis_framework_2005,
	title = {A framework for component-based construction},
	url = {https://ieeexplore.ieee.org/abstract/document/1575919},
	doi = {10.1109/SEFM.2005.3},
	abstract = {We present an overview of results developed mainly at Verimag, by the author and his colleagues, on a framework for component-based construction, characterized by the following: the behavior of atomic components is represented by transition systems; components are built from a set of atomic components by using "glue" operators; for each component, it is possible to separate its behavior from its structure, due to specific properties of glue operators. We show an instance of this framework, which combines two independent classes of glue operators, interaction models and priorities. The combination of interaction models and priorities is expressive enough to encompass heterogeneous interaction and execution. We show that separation between behavior and structure is instrumental for correctness-by-construction. Finally, we discuss new research problems related to a structure-dependent notion of expressiveness.},
	eventtitle = {Third {IEEE} International Conference on Software Engineering and Formal Methods ({SEFM}'05)},
	pages = {293--299},
	booktitle = {Third {IEEE} International Conference on Software Engineering and Formal Methods ({SEFM}'05)},
	author = {Sifakis, J.},
	urldate = {2024-04-23},
	date = {2005-09},
	note = {{ISSN}: 2160-7656},
	keywords = {Java, Programming, Algebra, Design engineering, Mathematical model, Middleware, Software design, Software standards, Standards development, Unified modeling language},
	file = {IEEE Xplore Abstract Record:/Users/calebarcher/Zotero/storage/TEGAZYYK/1575919.html:text/html;IEEE Xplore Full Text PDF:/Users/calebarcher/Zotero/storage/Y2747PBL/Sifakis - 2005 - A framework for component-based construction.pdf:application/pdf},
}

@article{parnas_criteria_1972,
	title = {On the criteria to be used in decomposing systems into modules},
	volume = {15},
	issn = {0001-0782},
	url = {https://dl.acm.org/doi/10.1145/361598.361623},
	doi = {10.1145/361598.361623},
	abstract = {This paper discusses modularization as a mechanism for improving the flexibility and comprehensibility of a system while allowing the shortening of its development time. The effectiveness of a “modularization” is dependent upon the criteria used in dividing the system into modules. A system design problem is presented and both a conventional and unconventional decomposition are described. It is shown that the unconventional decompositions have distinct advantages for the goals outlined. The criteria used in arriving at the decompositions are discussed. The unconventional decomposition, if implemented with the conventional assumption that a module consists of one or more subroutines, will be less efficient in most cases. An alternative approach to implementation which does not have this effect is sketched.},
	pages = {1053--1058},
	number = {12},
	journaltitle = {Communications of the {ACM}},
	shortjournal = {Commun. {ACM}},
	author = {Parnas, D. L.},
	urldate = {2024-04-23},
	date = {1972-12-01},
	keywords = {modularity, {KWIC} index, modules, software, software design, software engineering},
	file = {Full Text PDF:/Users/calebarcher/Zotero/storage/P4FE2TYR/Parnas - 1972 - On the criteria to be used in decomposing systems .pdf:application/pdf},
}

@inproceedings{filho_self-adaptive_2021,
	title = {Self-Adaptive Microservice-based Systems - Landscape and Research Opportunities},
	url = {https://ieeexplore.ieee.org/document/9462040},
	doi = {10.1109/SEAMS51251.2021.00030},
	abstract = {Microservices have become popular in the past few years, attracting the interest of both academia and industry. Despite of its benefits, this new architectural style still poses important challenges, such as resilience, performance and evolution. Self-adaptation techniques have been applied recently as an alternative to solve or mitigate those problems. However, due to the range of quality attributes that affect microservice architectures, many different self-adaptation strategies can be used. Thus, to understand the state-of-the-art of the use of self-adaptation techniques and mechanisms in microservice-based systems, this work conducted a systematic mapping, in which 21 primary studies were analyzed considering qualitative and quantitative research questions. The results show that most studies focus on the Monitor phase (28.57\%) of the adaptation control loop, address the self-healing property (23.81\%), apply a reactive adaptation strategy (80.95\%) in the system infrastructure level (47.62\%) and use a centralized approach (38.10\%). From those, it was possible to propose some research directions to fill existing gaps.},
	eventtitle = {2021 International Symposium on Software Engineering for Adaptive and Self-Managing Systems ({SEAMS})},
	pages = {167--178},
	booktitle = {2021 International Symposium on Software Engineering for Adaptive and Self-Managing Systems ({SEAMS})},
	author = {Filho, Messias and Pimentel, Eliaquim and Pereira, Wellington and Maia, Paulo Henrique M. and Cortés, Mariela I.},
	urldate = {2024-04-24},
	date = {2021-05},
	note = {{ISSN}: 2157-2321},
	keywords = {Computer architecture, Systematics, Industries, Monitoring, Microservice architecture, Software engineering, Adaptive systems, Resilience, Self-adaptation, Systematic study mapping},
	file = {IEEE Xplore Abstract Record:/Users/calebarcher/Zotero/storage/APM9C7LU/9462040.html:text/html;IEEE Xplore Full Text PDF:/Users/calebarcher/Zotero/storage/ANG7U3RH/Filho et al. - 2021 - Self-Adaptive Microservice-based Systems - Landsca.pdf:application/pdf},
}

@article{figueira_developing_2024,
	title = {Developing self-adaptive microservices},
	volume = {232},
	issn = {1877-0509},
	url = {https://www.sciencedirect.com/science/article/pii/S1877050924000267},
	doi = {10.1016/j.procs.2024.01.026},
	series = {5th International Conference on Industry 4.0 and Smart Manufacturing ({ISM} 2023)},
	abstract = {The modern development approaches are establishing microservices and cloud computing as major trends to benefit the technological community. However, these technologies are often prone to multiple issues regarding parallel development by numerous parties, delivery strategies and resource allocation. This paper proposes a novel architecture for developing self-adaptive microservices, using Kubernetes through the Azure Container Apps, including a strategy that will complement the architecture to enhance the development of microservices and aiming to achieve a solution that allows the readers to deliver software faster, with more resilience, more scalable, and more cost-effective, depending as low as possible from human intervention to maintain and scale. The author will apply the acquired knowledge to propose and test an architecture for a real use case scenario, building a notifications service integrated with a complex cloud-based web application system.},
	pages = {264--273},
	journaltitle = {Procedia Computer Science},
	shortjournal = {Procedia Computer Science},
	author = {Figueira, João and Coutinho, Carlos},
	urldate = {2024-04-24},
	date = {2024-01-01},
	keywords = {Kubernetes, Cloud computing, Microservices architecture, Azure Container Apps, Self-adaptive systems},
	file = {ScienceDirect Snapshot:/Users/calebarcher/Zotero/storage/SEA2Q4GJ/S1877050924000267.html:text/html;Submitted Version:/Users/calebarcher/Zotero/storage/YCJ85XJU/Figueira and Coutinho - 2024 - Developing self-adaptive microservices.pdf:application/pdf},
}

@article{martin_sustainable_2022,
	title = {Sustainable process synthesis, design, and analysis: Challenges and opportunities},
	volume = {30},
	issn = {2352-5509},
	url = {https://www.sciencedirect.com/science/article/pii/S2352550922000021},
	doi = {10.1016/j.spc.2022.01.002},
	shorttitle = {Sustainable process synthesis, design, and analysis},
	abstract = {In this perspective paper, we present challenges and opportunities that the chemical, biochemical and related industries pose to the process system engineering community to help deliver reliable and novel sustainable alternatives. More specifically, we highlight the need for a systems approach where model-based sustainable process synthesis, design, and analysis serve as opportunities to tackle the challenges. Three technology areas (interlinked to each other) that impact the sustainability of earth, namely, chemical processes linked with {CO}2 capture and utilization, biorefineries and water desalination are selected to highlight our views as well as the need for further development of computer-aided tools to efficiently solve the large and complex mathematical systems the problems represent. Analysis of these problems and their reported solutions indicate that opportunity exists for development of a new class of model-based methods and tools and their integration with the currently available ones to obtain the desired sustainability development goals.},
	pages = {686--705},
	journaltitle = {Sustainable Production and Consumption},
	shortjournal = {Sustainable Production and Consumption},
	author = {Martin, Mariano and Gani, Rafiqul and Mujtaba, Iqbal M.},
	urldate = {2024-04-25},
	date = {2022-03-01},
	keywords = {Computer-aided methods, Model-based software tools, Renewable resources, Sustainable process design, Systems solution approach},
	file = {Martin et al. - 2022 - Sustainable process synthesis, design, and analysi.pdf:/Users/calebarcher/Zotero/storage/JUY7D3NX/Martin et al. - 2022 - Sustainable process synthesis, design, and analysi.pdf:application/pdf;ScienceDirect Snapshot:/Users/calebarcher/Zotero/storage/KZQW5HFS/S2352550922000021.html:text/html},
}

@article{pistikopoulos_process_2021,
	title = {Process systems engineering – \textit{The generation next?}},
	volume = {147},
	issn = {0098-1354},
	url = {https://www.sciencedirect.com/science/article/pii/S0098135421000302},
	doi = {10.1016/j.compchemeng.2021.107252},
	shorttitle = {Process systems engineering – {\textless}i{\textgreater}The generation next?},
	abstract = {Process Systems Engineering ({PSE}) is the scientific discipline of integrating scales and components describing the behavior of a physicochemical system, via mathematical modelling, data analytics, design, optimization and control. {PSE} provides the ‘glue’ within scientific chemical engineering, and offers a scientific basis and computational tools towards addressing contemporary and future challenges such as in energy, environment, the ‘industry of tomorrow’ and sustainability. This perspective article offers a guide towards the next generation of {PSE} developments by looking at its history, core competencies, current status and ongoing trends.},
	pages = {107252},
	journaltitle = {Computers \& Chemical Engineering},
	shortjournal = {Computers \& Chemical Engineering},
	author = {Pistikopoulos, E N and Barbosa-Povoa, Ana and Lee, Jay H and Misener, Ruth and Mitsos, Alexander and Reklaitis, G V and Venkatasubramanian, V and You, Fengqi and Gani, Rafiqul},
	urldate = {2024-04-25},
	date = {2021-04-01},
	keywords = {Process systems engineering, Optimization, Control, Modelling, Supply chain, Synthesis-design},
	file = {Pistikopoulos et al. - 2021 - Process systems engineering – The generation ne.pdf:/Users/calebarcher/Zotero/storage/VAKY2DPA/Pistikopoulos et al. - 2021 - Process systems engineering – The generation ne.pdf:application/pdf;ScienceDirect Snapshot:/Users/calebarcher/Zotero/storage/P5JTN2U2/S0098135421000302.html:text/html},
}

@article{goldberg_survey_1974,
	title = {Survey of virtual machine research},
	volume = {7},
	rights = {https://ieeexplore.ieee.org/Xplorehelp/downloads/license-information/{IEEE}.html},
	issn = {0018-9162},
	url = {http://ieeexplore.ieee.org/document/6323581/},
	doi = {10.1109/MC.1974.6323581},
	pages = {34--45},
	number = {6},
	journaltitle = {Computer},
	shortjournal = {Computer},
	author = {Goldberg, Robert P.},
	urldate = {2024-04-25},
	date = {1974-06},
	langid = {english},
	file = {Goldberg - 1974 - Survey of virtual machine research.pdf:/Users/calebarcher/Zotero/storage/C7GS5LNZ/Goldberg - 1974 - Survey of virtual machine research.pdf:application/pdf},
}

@article{whitaker_denali_2001,
	title = {Denali: Lightweight Virtual Machines for Distributed and Networked Applications},
	abstract = {The goal of Denali is to safely execute many independent, untrusted server applications on a single physical machine. This would enable any developer to inject a new service into third-party Internet infrastructure; for example, dynamic content generation code could be introduced into content-delivery networks or caching systems. We believe that virtual machine monitors ({VMMs}) are ideally suited to this application domain. A {VMM} provides strong isolation by default, since one virtual machine cannot directly name a resource in another. In addition, {VMMs} defer the implementation of high-level abstractions to guest {OSs}, which greatly simpliﬁes the kernel and avoids “layer-below” attacks. The main challenge in using a {VMM} for this application domain is in scaling the number of concurrent virtual machines that can simultaneously execute on it.},
	author = {Whitaker, Andrew and Shaw, Marianne and Gribble, Steven D},
	date = {2001},
	langid = {english},
	file = {Whitaker et al. - Denali Lightweight Virtual Machines for Distribut.pdf:/Users/calebarcher/Zotero/storage/LCRKASB6/Whitaker et al. - Denali Lightweight Virtual Machines for Distribut.pdf:application/pdf},
}

@article{pietri_mapping_2017,
	title = {Mapping Virtual Machines onto Physical Machines in Cloud Computing: A Survey},
	volume = {49},
	issn = {0360-0300, 1557-7341},
	url = {https://dl.acm.org/doi/10.1145/2983575},
	doi = {10.1145/2983575},
	shorttitle = {Mapping Virtual Machines onto Physical Machines in Cloud Computing},
	abstract = {Cloud computing enables users to provision resources on demand and execute applications in a way that meets their requirements by choosing virtual resources that fit their application resource needs. Then, it becomes the task of cloud resource providers to accommodate these virtual resources onto physical resources. This problem is a fundamental challenge in cloud computing as resource providers need to map virtual resources onto physical resources in a way that takes into account the providers’ optimization objectives. This article surveys the relevant body of literature that deals with this mapping problem and how it can be addressed in different scenarios and through different objectives and optimization techniques. The evaluation aspects of different solutions are also considered. The article aims at both identifying and classifying research done in the area adopting a categorization that can enhance understanding of the problem.},
	pages = {1--30},
	number = {3},
	journaltitle = {{ACM} Computing Surveys},
	shortjournal = {{ACM} Comput. Surv.},
	author = {Pietri, Ilia and Sakellariou, Rizos},
	urldate = {2024-04-25},
	date = {2017-09-30},
	langid = {english},
	file = {Full Text PDF:/Users/calebarcher/Zotero/storage/YJX7ESCF/Pietri and Sakellariou - 2017 - Mapping Virtual Machines onto Physical Machines in.pdf:application/pdf},
}

@article{xu_four_2009,
	title = {Four styles of parallel and net programming},
	volume = {3},
	rights = {http://www.springer.com/tdm},
	issn = {1673-7350, 1673-7466},
	url = {http://link.springer.com/10.1007/s11704-009-0028-0},
	doi = {10.1007/s11704-009-0028-0},
	pages = {290--301},
	number = {3},
	journaltitle = {Frontiers of Computer Science in China},
	shortjournal = {Front. Comput. Sci. China},
	author = {Xu, Zhiwei and He, Yongqiang and Lin, Wei and Zha, Li},
	urldate = {2024-04-28},
	date = {2009-09},
	langid = {english},
	file = {s11704-009-0028-0.pdf:/Users/calebarcher/Zotero/storage/GFD2VX3I/s11704-009-0028-0.pdf:application/pdf},
}

@article{haynes_survey_1982,
	title = {A survey of highly parallel computing},
	volume = {15},
	issn = {1558-0814},
	url = {https://ieeexplore.ieee.org/document/1653823},
	doi = {10.1109/MC.1982.1653823},
	pages = {9--24},
	number = {1},
	journaltitle = {Computer},
	author = {{Haynes} and {Lau} and {Siewiorek} and {Mizell}},
	urldate = {2024-04-28},
	date = {1982-01},
	note = {Conference Name: Computer},
	keywords = {Computer architecture, Costs, Concurrent computing, Hardware, Parallel processing, Accidents, {FAA}, Functional programming, Software performance, Systolic arrays},
	file = {IEEE Xplore Abstract Record:/Users/calebarcher/Zotero/storage/BYB4WAK5/1653823.html:text/html;IEEE Xplore Full Text PDF:/Users/calebarcher/Zotero/storage/24J53QET/Haynes et al. - 1982 - A survey of highly parallel computing.pdf:application/pdf},
}
